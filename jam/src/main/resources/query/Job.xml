<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.client.job.dao.JobDAO">
	
	<!-- 키워드 검색 -->
	<sql id="jobSearch">
		<if test="keyword != null and keyword != ''">
			<![CDATA[
			AND (
				LOWER(j.title) LIKE '%' || LOWER(#{keyword}) || '%' ESCAPE '\'
        		OR LOWER(j.content) LIKE '%' || LOWER(#{keyword}) || '%' ESCAPE '\'
			)
			]]>
		</if>
	</sql>
	
	<!-- 지역 검색 -->
	<sql id="jobLocalSearch">
		<if test="city != null and city != ''">
	        <![CDATA[AND j.city = #{city}]]>
	    </if>
	    <if test="gu != null and gu != ''">
	        <![CDATA[AND j.gu = #{gu}]]>
	    </if>
	    <if test="dong != null and dong != ''">
	        <![CDATA[AND j.dong = #{dong}]]>
	    </if>
	</sql>
	
	<sql id="jobPositionSearch">
	    <if test="positions != null and positions.size() > 0">
	        AND j.position IN 
	        <foreach collection="positions" item="pos" open="(" separator="," close=")">
	            #{pos}
	        </foreach>
	    </if>
	</sql>
	
	
	<!-- 전체 공고 조회 -->
	<select id="getBoard" parameterType="job" resultType="job">
		<![CDATA[
		SELECT 
			post_id, title, 
			to_char(created_at, 'YYYY-MM-DD"T"HH24:MI:SS') as created_at,
			pay_category, pay, 
			city, gu, dong, position,
			0 AS isFavorite  
		FROM (
			SELECT /*+ INDEX_DESC(j IX_JOB_STATUS_CATEGORY_POSTID) */
				j.post_id, j.title, j.created_at, 
				j.pay_category, j.pay, 
				j.city, j.gu, j.dong, j.position,
				ROW_NUMBER() OVER (ORDER BY j.post_id DESC) AS rnum
			FROM job j
			]]>
			<where>
		        j.status = 0 AND j.category = #{category}
		        <include refid="jobSearch"/>
		        <include refid="jobLocalSearch"/>
		        <include refid="jobPositionSearch"/>
		    </where>
		) 
		<![CDATA[
		WHERE rnum > (#{pageNum} - 1) * #{amount} AND rnum <= #{pageNum} * #{amount}
		]]>
	</select>	
	
	<select id="getBoardWithFavorite" parameterType="job" resultType="job">
		<![CDATA[
		SELECT 
			j.post_id, j.title, 
			to_char(j.created_at, 'YYYY-MM-DD"T"HH24:MI:SS') as created_at,
			j.pay_category, j.pay, 
			j.city, j.gu, j.dong, j.position,
			CASE WHEN f.board_no IS NOT NULL THEN 1 ELSE 0 END AS isFavorite 
		FROM (
			SELECT /*+ INDEX_DESC(j IX_JOB_STATUS_CATEGORY_POSTID) */
				j.post_id, j.title, j.created_at, 
				j.pay_category, j.pay, 
				j.city, j.gu, j.dong, j.position,
				ROW_NUMBER() OVER (ORDER BY j.post_id DESC) AS rnum
			FROM job j
		]]>
			<where>
				j.status = 0 AND j.category = #{category}
				<include refid="jobSearch"/>
				<include refid="jobLocalSearch"/>
				<include refid="jobPositionSearch"/>
			</where>
		<![CDATA[
		) j 
		LEFT JOIN favorite f  
			ON j.post_id = f.board_no  
			AND f.board_type = 'job'  
			AND f.user_id = #{user_id, jdbcType=VARCHAR}
		WHERE rnum > (#{pageNum} - 1) * #{amount} 
		AND rnum <= #{pageNum} * #{amount}
		]]>
	</select>
		
	<select id="listCnt" parameterType="job" resultType="int">
	    SELECT count(*)
	    FROM job j
	    LEFT JOIN member m ON j.user_id = m.user_id
	    <where>
			1=1
			AND j.status = 0 AND j.category = #{category}
		    <include refid="jobSearch"/>
		    <include refid="jobLocalSearch"/>
		    <include refid="jobPositionSearch"/>
		</where>
	</select>
	
	<!-- 상세페이지 -->
	<select id="getPost" resultType="job">
		SELECT 
			j.post_id, j.title, j.content, 
			to_char(j.created_at, 'YYYY-MM-DD"T"HH24:MI:SS') as created_at,
			j.category, j.status,j.pay_category, pay, 
			m.user_name, j.user_id, m.company_name,
			j.city, j.gu, j.dong, 
			j.position, j.view_count, 0 AS isFavorite  
		FROM job j
		LEFT JOIN Member m ON j.user_id = m.user_id
		WHERE j.post_id = #{post_id}
	</select>
	
	<!-- 글 입력 -->
	<insert id="writePost" parameterType="job">
		<selectKey keyProperty="post_id" resultType="Long" order="BEFORE">
        	select job_seq.nextval from dual
    	</selectKey>
		INSERT INTO job(post_id, user_id, title, content, category, status,  pay_category, pay, position, view_count, city, gu, dong)
		VALUES(#{post_id},#{user_id}, #{title}, #{content}, #{category},0,  #{pay_category, jdbcType=INTEGER}, #{pay, jdbcType=INTEGER}, #{position}, 0, #{city}, #{gu, jdbcType = VARCHAR}, #{dong, jdbcType = VARCHAR})
	</insert>
	
	<!-- 글 수정페이지 -->
	<select id="getPostById" parameterType="job"  resultType="job">
		SELECT post_id, title, content, status, category, pay_category, pay, position, city, gu, dong
		FROM job
		WHERE post_id = #{post_id} 
	</select>
	
	<!-- 글 수정 -->
	<update id="editPost" parameterType="job">
		UPDATE job SET
			title = #{title}, 
			content = #{content},
			status = #{status},
			
			category = #{category},
			pay_category = #{pay_category, jdbcType=INTEGER},
			pay = #{pay, jdbcType=INTEGER},
			position = #{position},
			city = #{city},
			gu = #{gu, jdbcType = VARCHAR},
			dong = #{dong, jdbcType = VARCHAR}
		WHERE post_id = #{post_id} AND user_id = #{user_id}
	</update>
	
	<select id="appCountByPostId" parameterType="Long" resultType="int">
		SELECT count(*) FROM application WHERE post_id = #{post_id}
	</select>
	
	<!-- 글 삭제 -->
	<delete id="deletePost" parameterType="job">
		DELETE FROM job WHERE post_id = #{post_id} AND user_id = #{user_id}
	</delete>
	
	<!--  작성한 기업 공고 -->
	<select id="getMyJobPosts" resultType="job" parameterType="job">
		SELECT 
			j.post_id, j.title, 
			TO_CHAR(j.created_at, 'YYYY-MM-DD"T"HH24:MI:SS') AS created_at,
			j.pay_category, j.pay, j.status,
			j.city, j.gu, j.dong, j.position, count(a.application_id) AS applyCount
		FROM job j
		LEFT JOIN application a
			ON j.post_id = a.post_id
		WHERE 
			j.user_id = #{user_id} AND j.category = 0 
			<include refid="jobLocalSearch"/>
		    <include refid="jobPositionSearch"/>
		GROUP BY
			j.post_id, j.title, j.created_at,
			j.pay_category, j.pay, j.status,
			j.city, j.gu, j.dong, j.position
		ORDER BY j.post_id DESC
		OFFSET (#{pageNum} - 1) * #{amount} ROWS
		FETCH NEXT #{amount} ROWS ONLY
	</select>
	
	<!-- 작성한 멤버 모집 공고 -->
	<select id="getMyRecruitPosts" resultType="job" parameterType="job">
		SELECT 
			j.post_id, j.title, 
			TO_CHAR(j.created_at, 'YYYY-MM-DD"T"HH24:MI:SS') AS created_at,
			j.status, j.city, j.gu, j.dong, j.position, count(a.application_id) AS applyCount
		FROM job j
		LEFT JOIN application a
			ON j.post_id = a.post_id
		WHERE 
			j.user_id = #{user_id} AND j.category = 1 
			<include refid="jobLocalSearch"/>
		    <include refid="jobPositionSearch"/>
		GROUP BY
			j.post_id, j.title, j.created_at, 
			j.status, j.city, j.gu, j.dong, j.position
		ORDER BY j.post_id DESC
		OFFSET (#{pageNum} - 1) * #{amount} ROWS
		FETCH NEXT #{amount} ROWS ONLY
	</select>
	
	<select id="getMyPostCnt" parameterType="job" resultType="int">
	    SELECT count(*)
	    FROM job j
	    WHERE user_id = #{user_id} AND j.category = #{category}
        <include refid="jobLocalSearch"/>
	    <include refid="jobPositionSearch"/>
	</select>

	<!-- 조회수 -->
	<update id="incrementReadCnt" parameterType="job">
		UPDATE job SET view_count = view_count + 1 where post_id = #{post_id}
	</update>
	
	<!-- 공고 마감  -->
	<update id="closePost" parameterType="job">
		UPDATE job 
		SET status = 1
		WHERE post_id = #{post_id} AND user_id = #{user_id}
	</update>
	
	<select id="findPostInfo" parameterType="long" resultType="job">
		SELECT user_id, category
		FROM job
		WHERE post_id = #{post_id}
	</select>
	
	<!-- 지원 -->
	<insert id="createApplication">
		<selectKey resultType="long" order="BEFORE" keyProperty="application_id">
	        SELECT application_seq.NEXTVAL FROM dual
	    </selectKey>
		INSERT INTO application
			(application_id, user_id, post_id, title, content, created_at, company_id)
		VALUES
			(#{application_id}, #{user_id}, #{post_id}, #{title}, #{content}, sysdate, #{company_id})
	</insert>
	
	<!-- 존재하는 공고인지 확인 -->
	<select id="existsJobPost" parameterType="long" resultType="int">
		SELECT count(*)
		FROM job
		WHERE post_id = #{post_id}
	</select>
	
	<!-- 지원서 상세 -->
	<select id="getApplication" parameterType="Long" resultType="app">
		SELECT title, content, TO_CHAR(created_at,'YYYY-MM-DD"T"HH24:MI:SS') AS created_at
		FROM application
		WHERE application_id = #{application_id}
	</select>
	
	<select id="applicationsListCnt" parameterType="app" resultType="int">
		SELECT count(*)
		FROM application
		WHERE post_id = #{post_id}
	</select>
	
	<select id="findPostInfoByAppId" parameterType="Long" resultType="app">
		SELECT j.post_id, j.user_id AS company_id, j.category, a.user_id 
		FROM job j
			JOIN application a
			ON a.post_id = j.post_id
		WHERE a.application_id = #{application_id}
	</select>
	
	<!-- 지원 내역 -->
	<select id="getMyApplications" parameterType="app" resultType="java.util.Map">
		<bind name="periodDays" 
      		value="period != null &amp;&amp; period != '' &amp;&amp; period != 'all' ? @java.lang.Integer@valueOf(period) : null"/>

		SELECT 
			a.application_id,
			a.title       AS application_title,
			TO_CHAR(a.created_at,'YYYY-MM-DD"T"HH24:MI:SS') AS created_at,
			a.post_id,
			j.title       AS job_title,
			j.category,
			j.status,
			m.company_name
		FROM application a
		JOIN job j
			ON a.post_id = j.post_id
		LEFT JOIN member m
			ON m.user_id = j.user_id 
		WHERE a.user_id = #{user_id}
		<if test="periodDays != null">
			<![CDATA[
				AND a.created_at >= SYSDATE - #{periodDays}
			]]>
		</if>
	
		<if test="job_status != null">
			AND j.status = #{job_status}
		</if>
		<if test="keyword != null">
			AND (
				UPPER(j.title) LIKE UPPER(#{keyword}) ESCAPE '\'
				OR UPPER(j.content) LIKE UPPER(#{keyword}) ESCAPE '\'
				OR UPPER(m.company_name) LIKE UPPER(#{keyword}) ESCAPE '\'
			)
		</if>
		ORDER BY a.created_at DESC
	</select>
	
	<select id="getMyApplicationsCnt" parameterType="app" resultType="int">
		<bind name="periodDays" 
      		value="period != null &amp;&amp; period != '' &amp;&amp; period != 'all' ? @java.lang.Integer@valueOf(period) : null"/>

		SELECT COUNT(*)
		FROM application a
		WHERE a.user_id = #{user_id}
	
		<if test="periodDays != null">
			<![CDATA[
				AND a.created_at >= SYSDATE - #{periodDays}
			]]>
		</if>
	
		<if test="job_status != null">
			AND EXISTS (
				SELECT 1
				FROM job j
				WHERE j.post_id = a.post_id
				  AND j.status = #{}
			)
		</if>
		<if test="keyword != null">
			AND (
				UPPER(j.title) LIKE UPPER(#{keyword}) ESCAPE '\'
				OR UPPER(j.content) LIKE UPPER(#{keyword}) ESCAPE '\'
				OR UPPER(m.company_name) LIKE UPPER(#{keyword}) ESCAPE '\'
			)
		</if>
	</select>
	
	<!-- 지원 취소 -->
	<delete id="withdrawApplication" parameterType="app">
		DELETE 
		FROM application
		WHERE user_id = #{user_id} AND application_id = #{application_id}
	</delete>
	
	<select id="findAppJobInfo" parameterType="long" resultType="java.util.Map">
		SELECT 
			a.application_id 	AS applicationId, 
			a.user_id 			AS userId,
			j.post_id          	AS postId,
			j.category         	AS jobCategory 
		FROM application a
		JOIN job j ON a.post_id = j.post_id
		WHERE application_id = #{application_id}
	</select>
	
</mapper>