<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.client.community.dao.CommunityDAO">
	
	<!-- 커뮤니티 검색 -->
	<sql id="comSearch">
		<if test="search=='title'">
			<![CDATA[c.title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='content'">
			<![CDATA[c.content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='user_name'">
			<![CDATA[m.user_name LIKE '%' || #{keyword} || '%']]>
		</if>
	</sql>
	
	<select id="getBoards" parameterType="community" resultType="community">
		<![CDATA[
		SELECT c.post_id, c.title, TO_CHAR(c.created_at, 'YYYY/MM/DD HH24:MI') AS created_at, 
	        	c.comment_count, c.view_count, m.user_id, m.user_name, 0 AS isFavorite  
	    FROM community c
	    JOIN member m 
	    ON c.user_id = m.user_id
	    ]]>
	    <where>
        	1=1
        	<include refid="comSearch"></include>
        </where>
	    <![CDATA[
	    ORDER BY post_id DESC
	    OFFSET (#{pageNum} -1) * #{amount} ROWS
	    FETCH NEXT #{amount} ROWS ONLY
	    ]]>
	</select>

	<!-- 로그인 한 사용자는 즐겨찾기 한 글도 함께 조회 -->
	<select id="getBoardsWithFavorite" parameterType="community" resultType="community">
	    <![CDATA[
		SELECT 
		    c.post_id, c.title, 
		    TO_CHAR(c.created_at, 'YYYY/MM/DD HH24:MI') AS created_at, 
		    c.comment_count, c.view_count, c.user_id, c.user_name,
		    CASE WHEN f.board_no IS NOT NULL THEN 1 ELSE 0 END AS isFavorite 
		FROM (
		    SELECT /*+ INDEX_DESC(COMMUNITY SYS_C0023848) */
		        c.post_id, c.title, c.created_at, c.comment_count, c.view_count, 
		        c.user_id, m.user_name,
		        ROW_NUMBER() OVER (ORDER BY c.post_id DESC) AS rnum
		    FROM community c
		    JOIN Member m ON c.user_id = m.user_id
		]]>
		    <where>
		        1=1
		        <include refid="comSearch"></include>
		    </where>
		<![CDATA[
		) c  
		LEFT JOIN favorite f  
			ON c.post_id = f.board_no  
			AND f.board_type = 'community'  
			AND f.user_id = #{user_id, jdbcType=VARCHAR}
		WHERE rnum > (#{pageNum} - 1) * #{amount} 
		AND rnum <= #{pageNum} * #{amount}
		]]>
	</select>
	
	<!-- 커뮤니티 레코드 수 조회 -->
	<select id="listCnt" parameterType="community" resultType="int">
	    SELECT count(*)
	    FROM community c
	    LEFT JOIN member m ON c.user_id = m.user_id
	    <where>
			1=1
		    <include refid="comSearch"></include>
		</where>
	</select>	
	
	<!-- 로그인 한 사용자는 즐겨찾기 한 글도 함께 조회
	<select id="getBoardsWithFavorite" parameterType="community" resultType="community">
	    <![CDATA[
	    SELECT 
	        c.post_id, c.title, 
	        TO_CHAR(c.created_at, 'YYYY/MM/DD HH24:MI') AS created_at, 
	        c.comment_count, c.view_count, c.user_id, m.user_name,
	        CASE WHEN f.board_no IS NOT NULL THEN 1 ELSE 0 END AS isFavorite 
	    FROM (
	        SELECT /*+ INDEX_DESC(COMMUNITY SYS_C0023848) */
	            c.post_id, c.title, c.created_at, c.comment_count, c.view_count, c.user_id, m.user_name,
	            ROW_NUMBER() OVER (ORDER BY c.post_id DESC) AS rnum
	        FROM community c
	        JOIN member m ON c.user_id = m.user_id
	    ) c
	    LEFT JOIN favorite f  
	        ON c.post_id = f.board_no  
	        AND f.board_type = 'community'  
	        AND f.user_id = #{user_id, jdbcType=VARCHAR}  
	    WHERE rnum > (#{pageNum} - 1) * #{amount} 
	    AND rnum <= #{pageNum} * #{amount}
	    ]]>
	</select> -->

	
	<!-- 커뮤니티 조회수 증가  -->
	<update id="incrementReadCnt" parameterType="Long">
		UPDATE community SET view_count = view_count + 1 where post_id = #{post_id}
	</update>
	
	<!-- 커뮤니티 상세 페이지 -->
	<select id="getBoardDetail" resultType="community">
		SELECT c.post_id, c.title, c.content, c.view_count, to_char(c.created_at,'YYYY/MM/DD HH24:MI:SS') as created_at, m.user_name, c.user_id 
		FROM community c
		LEFT JOIN Member m 
		ON c.user_id = m.user_id
		WHERE post_id = #{post_id}
	</select>
	
	<!-- 커뮤니티 글 작성 -->
	<insert id="writeBoard" parameterType="community">
		<selectKey keyProperty="post_id" resultType="Long" order="BEFORE">
        	select com_seq.nextval from dual
    	</selectKey>
		INSERT INTO community(post_id, user_id, title, content, view_count, comment_count, imageFileName)
		VALUES(#{post_id},#{user_id}, #{title}, #{content}, 0 ,0, #{imageFileName, jdbcType = VARCHAR})
	</insert>
	
	<!-- 커뮤니티 수정 할 글 불러오기 -->
	<select id="getBoardById" parameterType="community"  resultType="community">
		SELECT title, content, imageFileName, user_id
		FROM community
		WHERE post_id = #{post_id} 
	</select>
	
	<!-- 커뮤니티 글 수정 -->
	<update id="editBoard" parameterType="community">
		UPDATE community SET
		title = #{title},
		content = #{content},
		created_at = sysdate
		<if test="imageFileName != ''">
			,imageFileName = #{imageFileName, jdbcType = VARCHAR}
		</if>
		WHERE post_id = #{post_id} AND user_id = #{user_id}
	</update>
	
	<!-- 커뮤니티 글 삭제 -->
	<delete id="boardDelete" parameterType="community">
		DELETE FROM community WHERE post_id = #{post_id} AND user_id = #{user_id}
	</delete>
	
	<!-- 댓글 개수 증감 -->
	<update id="updateReplyCnt">
		update community
		set comment_count = comment_count + #{amount}
		where post_id = #{post_id} 
	</update>
	
	<!-- 특정 회원의 커뮤니티 글 조회 --> 
	<select id="getPosts" resultType="community" parameterType="community">
		<![CDATA[
		SELECT post_id, title, to_char(created_at,'YYYY/MM/DD') as created_at, view_count
		FROM (
				SELECT /*+ INDEX_DESC(COMMUNITY SYS_C0023848) */
					rownum as rnum, post_id, title, created_at, view_count
				FROM community c
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="comSearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) communityList
			WHERE rnum > (#{pageNum} - 1) * #{amount}
			]]>
	</select>
	
	<!-- 특정 회원의 커뮤니티 레코드 수 조회 -->
	<select id="getUserPostCnt" parameterType="community" resultType="int">
	    SELECT count(*)
	    FROM community c
	    WHERE user_id = #{user_id}
	    <trim prefix="AND (" suffix=")" prefixOverrides="AND | OR">
	        <include refid="comSearch"></include>
	    </trim>
	</select>
	
	
</mapper>