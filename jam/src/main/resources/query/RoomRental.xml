<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.client.roomRental.dao.RoomRentalDAO">
	
	<!-- 합주실 키워드 검색 -->
	<sql id="roomSearch">
		<if test="search=='room_title'">
			<![CDATA[AND r.title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='room_content'">
			<![CDATA[AND r.content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='user_name'">
			<![CDATA[AND m.user_name LIKE '%' || #{keyword} || '%']]>
		</if>
	</sql>
	
	<!-- 합주실 지역 검색 -->
	<sql id="roomLocalSearch">
		<if test="city != null and city != ''">
	        <![CDATA[AND r.city = #{city}]]>
	    </if>
	    <if test="gu != null and gu != ''">
	        <![CDATA[AND r.gu = #{gu}]]>
	    </if>
	    <if test="dong != null and dong != ''">
	        <![CDATA[AND r.dong = #{dong}]]>
	    </if>
	</sql> 
	
	
	<!-- 합주실 list -->
	<select id="getBoards" parameterType="room" resultType="room">
		<![CDATA[
		SELECT 
			post_id, title, 
			to_char(created_at, 'YYYY/MM/DD HH24:MI') AS created_at, 
			comment_count, view_count, 
			status, price, 
			duration, user_id , user_name, 
			city, gu, dong,
			0 AS isFavorite  
		FROM (
			SELECT /*+ INDEX_DESC(roomRental SYS_C0025655) */
				r.post_id, r.title, r.created_at, 
				r.comment_count, r.price, r.roomRental_duration, 
				r.view_count, r.status, r.user_id , 
				m.user_name, r.city, r.gu, r.dong,
				ROW_NUMBER() OVER (ORDER BY r.post_id DESC) AS rnum
			FROM roomRental r
			LEFT JOIN Member m ON r.user_id = m.user_id
			]]>
			<where>
		        1=1
		        <include refid="roomSearch"></include>
		        <include refid="roomLocalSearch"></include>
		    </where>
		)
		<![CDATA[ 
		WHERE rnum > (#{pageNum} - 1) * #{amount} AND rnum <= #{pageNum} * #{amount} 
		]]>
	</select>
	
	<!-- 로그인 한 사용자는 즐겨찾기 한 글도 함께 조회 -->
	<select id="getBoardsWithFavorite" parameterType="room" resultType="room">
	    <![CDATA[
		SELECT 
		    post_id, title, 
			to_char(created_at, 'YYYY/MM/DD HH24:MI') AS created_at, 
			comment_count, view_count, 
			status, price, 
			roomRental_duration, r.user_id , user_name, 
			city, gu, dong,
			CASE WHEN f.board_no IS NOT NULL THEN 1 ELSE 0 END AS isFavorite 
		FROM (
		    SELECT /*+ INDEX_DESC(roomRental SYS_C0025655) */
				r.post_id, r.title, r.created_at, r.comment_count, r.price, r.roomRental_duration, r.view_count, r.status, r.user_id , m.user_name, r.city, r.gu, r.dong,
				ROW_NUMBER() OVER (ORDER BY r.post_id DESC) AS rnum
			FROM roomRental r
			JOIN Member m ON r.user_id = m.user_id
		]]>
		    <where>
		        1=1
		        <include refid="roomSearch"></include>
		        <include refid="roomLocalSearch"></include>
		    </where>
		<![CDATA[
		) r
		LEFT JOIN favorite f  
			ON r.post_id = f.board_no  
			AND f.board_type = 'roomRental'  
			AND f.user_id = #{user_id, jdbcType=VARCHAR}
		WHERE rnum > (#{pageNum} - 1) * #{amount} 
		AND rnum <= #{pageNum} * #{amount}
		]]>

	</select>
	
	<select id="listCnt" parameterType="room" resultType="int">
	    SELECT count(*)
	    FROM roomRental r
	    LEFT JOIN member m ON r.user_id = m.user_id
	    <where>
			1=1
		    <include refid="roomSearch"></include>
		    <include refid="roomLocalSearch"></include>
		</where>
	</select>
	
	<!-- 합주실 조회수 -->
	<update id="incrementReadCnt" parameterType="Long">
		UPDATE roomRental 
		SET view_count = view_count + 1 
		WHERE post_id = #{post_id}
	</update>
	
	<!-- 합주실 상세페이지 -->
	<select id="getBoardDetail" parameterType="Long" resultType="room">
		SELECT r.post_id, r.title, r.content, r.status, r.view_count, to_char(r.created_at,'YYYY/MM/DD HH24:MI:SS') as created_at, r.price, m.user_name, r.user_id
		FROM roomRental r
		LEFT JOIN Member m ON r.user_id = m.user_id
		WHERE post_id = #{post_id}
	</select>
	
	<!-- 합주실 글 입력 -->
	<insert id="writeBoard" parameterType="room">
		<selectKey keyProperty="post_id" resultType="Long" order="BEFORE">
			SELECT roomRental_seq.nextval from dual
		</selectKey>
		INSERT INTO roomRental(post_id,  title, content,status, view_count, comment_count,created_at, price, user_id, city, gu, dong)
		VALUES(#{post_id}, #{title}, #{content}, 0, 0, 0, sysdate, #{price}, #{user_id}, #{city}, #{gu}, #{dong})
	</insert>
	
	<!-- 합주실 글 수정 페이지 -->
	<select id="getBoardById" parameterType="Long" resultType="room">
		SELECT post_id, title, content,status,price, imageFileName
		FROM roomRental
		WHERE post_id = #{post_id}
	</select>
	
	<!-- 합주실 글 수정 -->
	<update id="editBoard" parameterType="room">
		UPDATE roomRental SET
		title = #{title},
		content = #{content},
		status = #{status},
		price = #{price},
		created_at = sysdate
		<if test="imageFileName != ''">
			,imageFileName = #{imageFileName, jdbcType = VARCHAR}
		</if>
		WHERE post_id = #{post_id}
	</update>
	
	<!-- 합주실 글 삭제 -->
	<delete id="boardDelete" parameterType="Long">
		DELETE FROM roomRental WHERE post_id = #{post_id}
	</delete>
	
	<!-- 댓글 개수 증감 -->
	<update id="updateReplyCnt">
		UPDATE roomRental
		SET comment_count = comment_count + #{amount}
		WHERE post_id = #{post_id}
	</update>
	
	<!-- 특정 회원의 커뮤니티 글 조회 --> 
	<select id="getRoomPosts" resultType="room" parameterType="room">
		<![CDATA[
		SELECT post_id, title, to_char(created_at,'YYYY/MM/DD') as created_at, view_count
		FROM (
				SELECT /*+ INDEX_DESC(roomRental SYS_C0025655) */
					rownum as rnum, post_id, title, created_at, view_count
				FROM roomRental r
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="roomSearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) roomRentalList
			WHERE rnum > (#{pageNum} - 1) * #{amount}
			]]>
	</select>
	
	<!-- 특정 회원의 커뮤니티 레코드 수 조회 -->
	<select id="getUserPostCnt" parameterType="room" resultType="int">
	    SELECT count(*)
	    FROM roomRental r
	    WHERE user_id = #{user_id}
	    <trim prefix="AND (" suffix=")" prefixOverrides="AND | OR">
	        <include refid="roomSearch"></include>
	    </trim>
	</select>
	
</mapper>