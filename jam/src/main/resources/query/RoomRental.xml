<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.client.roomRental.dao.RoomRentalDAO">
	
	<!-- 합주실 키워드 검색 -->
	<sql id="roomSearch">
		<if test="search=='room_title'">
			<![CDATA[AND r.roomRental_title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='room_content'">
			<![CDATA[AND r.roomRental_content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='user_name'">
			<![CDATA[AND m.user_name LIKE '%' || #{keyword} || '%']]>
		</if>
	</sql>
	
	<!-- 합주실 지역 검색 -->
	<sql id="roomLocalSearch">
		<if test="city != null and city != ''">
	        <![CDATA[AND r.city = #{city}]]>
	    </if>
	    <if test="gu != null and gu != ''">
	        <![CDATA[AND r.gu = #{gu}]]>
	    </if>
	    <if test="dong != null and dong != ''">
	        <![CDATA[AND r.dong = #{dong}]]>
	    </if>
	</sql> 
	
	
	<!-- 합주실 list -->
	<select id="getBoards" parameterType="room" resultType="room">
		<![CDATA[
		SELECT roomRental_no, roomRental_title, 
			to_char(roomRental_date, 'YYYY/MM/DD HH24:MI') AS roomRental_date, 
			roomRental_reply_cnt, roomRental_hits, 
			roomRental_status, roomRental_price, 
			roomRental_duration, user_id , user_name, 
			city, gu, dong
		FROM (
			SELECT /*+ INDEX_DESC(roomRental SYS_C0025655) */
				r.roomRental_no, r.roomRental_title, r.roomRental_date, r.roomRental_reply_cnt, r.roomRental_price, r.roomRental_duration, r.roomRental_hits, r.roomRental_status, r.user_id , m.user_name, r.city, r.gu, r.dong,
				ROW_NUMBER() OVER (ORDER BY r.roomRental_no DESC) AS rnum
			FROM roomRental r
			JOIN Member m ON r.user_id = m.user_id
			]]>
			<where>
		        1=1
		        <include refid="roomSearch"></include>
		        <include refid="roomLocalSearch"></include>
		    </where>
		)
		<![CDATA[ 
		WHERE rnum > (#{pageNum} - 1) * #{amount} AND rnum <= #{pageNum} * #{amount} 
		]]>
	</select>
	
	<select id="listCnt" parameterType="room" resultType="int">
	    SELECT count(*)
	    FROM roomRental r
	    LEFT JOIN member m ON r.user_id = m.user_id
	    <where>
			1=1
		    <include refid="roomSearch"></include>
		    <include refid="roomLocalSearch"></include>
		</where>
	</select>
	
	<!-- 합주실 조회수 -->
	<update id="incrementReadCnt" parameterType="Long">
		UPDATE roomRental 
		SET roomRental_hits = roomRental_hits + 1 
		WHERE roomRental_no = #{roomRental_no}
	</update>
	
	<!-- 합주실 상세페이지 -->
	<select id="getBoardDetail" parameterType="Long" resultType="room">
		SELECT r.roomRental_no, r.roomRental_title, r.roomRental_content, r.roomRental_status, r.roomRental_hits, to_char(r.roomRental_date,'YYYY/MM/DD HH24:MI:SS') as roomRental_date, r.roomRental_price, m.user_name, r.user_id
		FROM roomRental r
		LEFT JOIN Member m ON r.user_id = m.user_id
		WHERE roomRental_no = #{roomRental_no}
	</select>
	
	<!-- 합주실 글 입력 -->
	<insert id="writeBoard" parameterType="room">
		<selectKey keyProperty="roomRental_no" resultType="Long" order="BEFORE">
			SELECT roomRental_seq.nextval from dual
		</selectKey>
		INSERT INTO roomRental(roomRental_no,  roomRental_title, roomRental_content,roomRental_status, roomRental_hits, roomRental_reply_cnt,roomRental_date, roomRental_price, user_id, city, gu, dong)
		VALUES(#{roomRental_no}, #{roomRental_title}, #{roomRental_content}, 0, 0, 0, sysdate, #{roomRental_price}, #{user_id}, #{city}, #{gu}, #{dong})
	</insert>
	
	<!-- 합주실 글 수정 페이지 -->
	<select id="getBoardById" parameterType="Long" resultType="room">
		SELECT roomRental_no, roomRental_title, roomRental_content,roomRental_status,roomRental_price, imageFileName
		FROM roomRental
		WHERE roomRental_no = #{roomRental_no}
	</select>
	
	<!-- 합주실 글 수정 -->
	<update id="editBoard" parameterType="room">
		UPDATE roomRental SET
		roomRental_title = #{roomRental_title},
		roomRental_content = #{roomRental_content},
		roomRental_status = #{roomRental_status},
		roomRental_price = #{roomRental_price},
		roomRental_date = sysdate
		<if test="imageFileName != ''">
			,imageFileName = #{imageFileName, jdbcType = VARCHAR}
		</if>
		WHERE roomRental_no = #{roomRental_no}
	</update>
	
	<!-- 합주실 글 삭제 -->
	<delete id="boardDelete" parameterType="Long">
		DELETE FROM roomRental WHERE roomRental_no = #{roomRental_no}
	</delete>
	
	<!-- 댓글 개수 증감 -->
	<update id="updateReplyCnt">
		UPDATE roomRental
		SET roomRental_reply_cnt = roomRental_reply_cnt + #{amount}
		WHERE roomRental_no = #{roomRental_no}
	</update>
	
	<!-- 특정 회원의 커뮤니티 글 조회 --> 
	<select id="getRoomPosts" resultType="room" parameterType="room">
		<![CDATA[
		SELECT roomRental_no, roomRental_title, to_char(roomRental_date,'YYYY/MM/DD') as roomRental_date, roomRental_hits
		FROM (
				SELECT /*+ INDEX_DESC(roomRental SYS_C0025655) */
					rownum as rnum, roomRental_no, roomRental_title, roomRental_date, roomRental_hits
				FROM roomRental r 
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="roomSearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) roomRentalList
			WHERE rnum > (#{pageNum} - 1) * #{amount}
			]]>
	</select>
	
	<!-- 특정 회원의 커뮤니티 레코드 수 조회 -->
	<select id="getUserPostCnt" parameterType="room" resultType="int">
	    SELECT count(*)
	    FROM roomRental r
	    WHERE user_id = #{user_id}
	    <trim prefix="AND (" suffix=")" prefixOverrides="AND | OR">
	        <include refid="roomSearch"></include>
	    </trim>
	</select>
	
</mapper>