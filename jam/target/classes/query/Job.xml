<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.client.job.dao.JobDAO">
	
	<!-- 키워드 검색 -->
	<sql id="jobSearch">
		<if test="search=='job_title'">
			<![CDATA[AND j.job_title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='job_content'">
			<![CDATA[AND j.job_content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='user_name'">
			<![CDATA[AND m.user_name LIKE '%' || #{keyword} || '%']]>
		</if>
	</sql>
	
	<!-- 지역 검색 -->
	<sql id="jobLocalSearch">
		<if test="city != null and city != ''">
	        <![CDATA[AND j.city = #{city}]]>
	    </if>
	    <if test="gu != null and gu != ''">
	        <![CDATA[AND j.gu = #{gu}]]>
	    </if>
	    <if test="dong != null and dong != ''">
	        <![CDATA[AND j.dong = #{dong}]]>
	    </if>
	</sql>
	
	<sql id="jobPositionSearch">
	    <if test="positions != null and positions.size() > 0">
	        AND position IN 
	        <foreach collection="positions" item="pos" open="(" separator="," close=")">
	            #{pos}
	        </foreach>
	    </if>
	</sql>
	
	
	<!-- list -->
	<select id="getBoards" parameterType="job" resultType="job">
		<![CDATA[
		SELECT job_no, job_title, to_char(job_date, 'YYYY/MM/DD') AS job_date, pay_category, pay, city, gu, dong, position
		FROM (
			SELECT /*+ INDEX_DESC(JOB SYS_C0025522) */
				j.job_no, j.job_title, j.job_date, j.job_category, j.pay_category, j.pay, j.city, j.gu, j.dong, j.position,
				ROW_NUMBER() OVER (ORDER BY j.job_no DESC) AS rnum
			FROM job j
			LEFT JOIN Member m ON j.user_id = m.user_id
			]]>
			<where>
		        1=1
		        AND j.job_status = 0 AND j.job_category = #{job_category}
		        <include refid="jobSearch"></include>
		        <include refid="jobLocalSearch"></include>
		        <include refid="jobPositionSearch"/>
		    </where>
		) 
		<![CDATA[
		WHERE rnum > (#{pageNum} - 1) * #{amount} AND rnum <= #{pageNum} * #{amount}
		]]>
	</select>	
	
	<select id="listCnt" parameterType="room" resultType="int">
	    SELECT count(*)
	    FROM job j
	    LEFT JOIN member m ON j.user_id = m.user_id
	    <where>
			1=1
			AND j.job_status = 0 AND j.job_category = #{job_category}
		    <include refid="jobSearch"></include>
		    <include refid="jobLocalSearch"></include>
		    <include refid="jobPositionSearch"/>
		</where>
	</select>
	
	<!-- 조회수 -->
	<update id="incrementReadCnt" parameterType="job">
		UPDATE job SET job_hits = job_hits + 1 where job_no = #{job_no}
	</update>
	
	<!-- 상세페이지 -->
	<select id="getBoardDetail" resultType="job">
		SELECT j.job_no, j.job_title, j.job_content, j.job_hits, to_char(j.job_date,'YYYY/MM/DD HH24:MI:SS') as job_date, j.job_category, j.job_status,j.pay_category, pay, m.user_name, j.user_id, j.city, j.gu, j.dong 
		FROM job j
		LEFT JOIN Member m ON j.user_id = m.user_id
		WHERE j.job_no = #{job_no}
	</select>
	
	<!-- 글 입력 -->
	<insert id="writeBoard" parameterType="job">
		<selectKey keyProperty="job_no" resultType="Long" order="BEFORE">
        	select job_seq.nextval from dual
    	</selectKey>
		INSERT INTO job(job_no, user_id, job_title, job_content, job_category,job_status,  pay_category, pay,  job_hits, job_reply_cnt, imageFileName, city, gu, dong)
		VALUES(#{job_no},#{user_id}, #{job_title}, #{job_content}, #{job_category},0,  #{pay_category}, #{pay}, 0 ,0, #{imageFileName, jdbcType = VARCHAR}, #{city}, #{gu}, #{dong})
	</insert>
	
	<!-- 글 수정페이지 -->
	<select id="getBoardById" parameterType="job"  resultType="job">
		SELECT job_no, job_title, job_content,job_status,pay_category, job_status, pay, imageFileName
		FROM job
		WHERE job_no = #{job_no} 
	</select>
	
	<!-- 글 수정 -->
	<update id="editBoard" parameterType="job">
		UPDATE job SET
		job_title = #{job_title},
		job_content = #{job_content},
		job_status = #{job_status},
		job_category = #{job_category},
		pay_category = #{pay_category},
		pay = #{pay},
		job_date = sysdate
		<if test="imageFileName != ''">
			,imageFileName = #{imageFileName, jdbcType = VARCHAR}
		</if>
		WHERE job_no = #{job_no}
	</update>
	
	<!-- 글 삭제 -->
	<delete id="boardDelete" parameterType="job">
		DELETE FROM job WHERE job_no = #{job_no}
	</delete>
	
	<!-- 댓글 개수 증감 -->
	<update id="updateReplyCnt">
		UPDATE job
		SET job_reply_cnt = job_reply_cnt + #{amount}
		WHERE job_no = #{job_no}
	</update>

	<!-- 특정 회원의  글 조회 --> 
	<select id="getPosts" resultType="job" parameterType="job">
		<![CDATA[
		SELECT job_no, job_title, to_char(job_date,'YYYY/MM/DD') as job_date, job_hits
		FROM (
				SELECT /*+ INDEX_DESC(JOB SYS_C0025522) */
					rownum as rnum, job_no, job_title, job_date, job_hits
				FROM job j
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="jobSearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) jobList
			WHERE rnum > (#{pageNum} - 1) * #{amount}
			]]>
	</select>
	
	<!-- 특정 회원의 레코드 수 조회 -->
	<select id="getUserPostCnt" parameterType="job" resultType="int">
	    SELECT count(*)
	    FROM job j
	    WHERE user_id = #{user_id}
	    <trim prefix="AND (" suffix=")" prefixOverrides="AND | OR">
	        <include refid="jobSearch"></include>
	    </trim>
	</select>
	
</mapper>