<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.client.member.dao.MemberDAO">

	<!-- 회원가입 -->
	<insert id="memberJoin" parameterType="member">
	INSERT INTO member (user_id, public_id, user_pw, user_name, phone, email, address)
	VALUES (
		#{user_id}, 
		SYS_GUID(),
		#{user_pw}, 
		#{user_name}, 
		#{phone}, 
		#{email},
		#{address}
	)
	</insert>
	
	<!-- 아이디 중복검사 -->
  	<select id="idCheck" resultType="int">
  		SELECT count(*) 
  		FROM member 
  		WHERE user_id = #{userId}
  	</select>
  	
  	<!-- 닉네임 중복검사 -->
  	<select id="nameCheck" resultType="int">
  		SELECT count(*) 
  		FROM member 
  		WHERE user_name = #{user_name}
  	</select>
  	
  	<!-- 전화번호 중복검사 -->
  	<select id="phoneCheck" resultType="int">
  		SELECT count(*) 
  		FROM member 
  		WHERE phone = #{phone}
  	</select>
  	
  	<!-- 이메일 중복검사 -->
  	<select id="emailCheck" resultType="int">
  		SELECT count(*)
  		FROM member
  		WHERE email = #{email}
  	</select>
  	
  	
  	<!-- 사용자 정보 확인 -->
  	<select id="findByUsername" resultType="member">
  		SELECT user_id, user_pw, user_name, address, phone, email, role
  		FROM member
  		WHERE user_id = #{user_id}
  	</select>
  	
  	<!-- 회원 닉네임 가져오기 -->
  	<select id="getUserName" resultType="String">
  		SELECT user_name
  		FROM member
  		WHERE user_id = #{user_id}
  	</select>
  	
  	<!-- 아이디 가져오기 -->
  	<select id="getUserId" resultType="String">
  		SELECT user_id
  		FROM member
  		WHERE user_name = #{user_nae}
  	</select>
  	
  	<!-- refresh 토큰 저장 -->
  	<update id="addRefreshToken" parameterType="String">
		UPDATE member
		SET refreshToken = #{refreshToken}
		WHERE user_id = #{user_id}
  	</update>
  	
  	<!-- refresh 토큰 삭제 -->
  	<update id="deleteRefreshToken" parameterType="String">
  		UPDATE member
		SET refreshToken = NULL
		WHERE user_id = #{user_id}
  	</update>
  	
  	<!-- refresh 토큰 가져오기 -->
  	<select id="getRefreshToken" parameterType="String" resultType="String">
  		SELECT refreshToken
  		FROM member
  		WHERE user_id = #{user_id}
  	</select>
	
	<!-- 마이페이지 - 내가 쓴 글 -->
	
	<!-- 커뮤니티 -->
	<select id="comMyWrite" resultType="community" parameterType="community">
		<![CDATA[
		SELECT com_no, com_title, to_char(com_date,'YYYY/MM/DD') as com_date, com_hits
		FROM (
				SELECT /*+ INDEX_DESC(COMMUNITY SYS_C0023848) */
					rownum as rnum, com_no, com_title, com_date, com_hits
				FROM community 
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="mySearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) communityList
			WHERE rnum > (#{pageNum} - 1) * #{amount}
			]]>
	</select>
	
	<!-- 마이페이지 커뮤니티 글 레코드 수 조회 -->
	<select id ="myComListCnt" parameterType="community" resultType="int">
		SELECT count(*) 
		FROM community
		WHERE user_id  = #{user_id} 
		<trim prefix=" and (" suffix=")" >
			<include refid="mySearch"></include>
		</trim>
	</select>
	
	<!-- 중고악기 -->
	<select id="fleaMyWrite" parameterType="flea" resultType="flea" >
		<![CDATA[
		SELECT flea_no, flea_title, to_char(flea_date,'YYYY/MM/DD') as flea_date, flea_hits
		FROM (
				SELECT /*+ INDEX_DESC(fleaMarket SYS_C0023964) */
					rownum as rnum, flea_no, flea_title, flea_date, flea_hits
				FROM fleaMarket 
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="mySearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) fleaList
			WHERE rnum > (#{pageNum} - 1) * #{amount} 
			]]>
	</select>
	
	<!-- 중고악기 커뮤니티 글 레코드 수 조회 -->
	<select id ="myFleaListCnt" parameterType="flea" resultType="int">
		SELECT count(*) 
		FROM fleaMarket
		WHERE user_id  = #{user_id} 
		<trim prefix=" and (" suffix=")" >
			<include refid="mySearch"></include>
		</trim>
	</select>
	
	<!-- 구인구직 -->
	<select id="jobMyWrite" resultType="job" parameterType="job">
		<![CDATA[
		SELECT job_no, job_title, to_char(job_date,'YYYY/MM/DD') as job_date, job_hits
		FROM (
				SELECT /*+ INDEX_DESC(job SYS_C0025522) */
					rownum as rnum, job_no, job_title, job_date, job_hits
				FROM job 
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="mySearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) jobList
			WHERE rnum > (#{pageNum} - 1) * #{amount} 
			]]>
	</select>
	
	<!-- 구인구직 커뮤니티 글 레코드 수 조회 -->
	<select id ="myJobListCnt" parameterType="job" resultType="int">
		SELECT count(*) 
		FROM job
		WHERE user_id  = #{user_id} 
		<trim prefix=" and (" suffix=")" >
			<include refid="mySearch"></include>
		</trim>
	</select>
	
	<!-- 합주실 -->
	<select id="roomMyWrite" resultType="room" parameterType="room">
		<![CDATA[
		SELECT roomRental_no, roomRental_title, to_char(roomRental_date,'YYYY/MM/DD') as roomRental_date, roomRental_hits
		FROM (
				SELECT /*+ INDEX_DESC(roomRental SYS_C0025655) */
					rownum as rnum, roomRental_no, roomRental_title, roomRental_date, roomRental_hits
				FROM roomRental 
				where ]]> 
				<trim prefix="(" suffix=") AND" prefixOverrides="AND">
					<include refid="mySearch"></include> 
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND user_id  = #{user_id} 
				) roomList
			WHERE rnum > (#{pageNum} - 1) * #{amount} 
			]]> 
	</select>
	
	
	<!-- 합주실 커뮤니티 글 레코드 수 조회 -->
	<select id ="myRoomListCnt" parameterType="room" resultType="int">
		SELECT count(*) 
		FROM roomRental
		WHERE user_id  = #{user_id} 
		<trim prefix=" and (" suffix=")" >
			<include refid="mySearch"></include>
		</trim>
	</select>
	
	<!-- 마이페이지 작성 글 검색 -->
	<sql id="mySearch">
		<if test="search=='com_title'">
			<![CDATA[com_title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='com_content'">
			<![CDATA[com_content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='flea_title'">
			<![CDATA[flea_title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='flea_content'">
			<![CDATA[flea_content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='job_title'">
			<![CDATA[job_title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='job_content'">
			<![CDATA[job_content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='roomRental_title'">
			<![CDATA[roomRental_title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='roomRental_content'">
			<![CDATA[roomRental_content LIKE '%' || #{keyword} || '%']]>
		</if>
	</sql>
	
	<!-- 마이페이지 - 회원 정보 페이지 -->
	<select id="account" resultType="member" parameterType="String">
		SELECT user_id, user_name, address, phone, social_login
		FROM member
		WHERE user_id = #{user_id}
	</select>
	
  	<!-- 아이디 찾기 -->
  	<select id="findId" parameterType="String" resultType="String">
  		SELECT user_id
  		FROM member
  		WHERE email = #{email}
  		AND phone = #{phone}
  	</select>
  	
  	<!-- 비밀번호 찾기 -->
	<select id="findPw" parameterType="String" resultType="int">
		SELECT count(*)
		FROM member
		WHERE user_id = #{user_id} 
		AND email = #{email} 
		AND phone = #{phone}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePw" parameterType="String">
		UPDATE member
		SET user_pw = #{user_pw}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 닉네임 변경 -->
	<update id="updateUserName" parameterType="member">
		UPDATE member
		SET user_name = #{user_name}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 전화번호 변경 -->
	<update id="updatePhone" parameterType="member">
		UPDATE member
		SET phone = #{phone}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 비밀번호 확인 -->
	<select id="pwConfirm" resultType="String" parameterType="member">
		SELECT user_pw
		FROM member
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 주소 변경 -->
	<update id="updateAddress" parameterType="member">
		UPDATE member
		SET address = #{address}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="withDraw" parameterType="String">
		DELETE FROM member WHERE user_id = #{user_id}		
	</delete>
	
	
	<!-- 네이버 회원 정보 찾기 -->
	<select id="findSocialUser" parameterType="member" resultType="int">
		<![CDATA[
		select COUNT(*)
		from member 
		where user_id = #{user_id}
		]]>
	</select>
	
	<!-- 네이버 회원 정보 저장 -->
	<insert id="SocialRegister" parameterType="member">
		INSERT INTO member(user_id, user_name, user_pw, email, phone, role, social_login)
		VALUES (#{user_id}, #{user_name}, #{user_pw}, #{email}, #{phone},'MEMBER', 1)
	</insert>
	
	<!-- refresh token으로 회원 아이디, 닉네임, 권한 조회 -->
	<select id="getUserInfo" parameterType="String" resultType="member">
		SELECT user_id, user_name, role
		FROM member
		WHERE refreshToken = #{refreshToken}
	</select>
	
</mapper>